{"version":3,"sources":["i18n.js","useState.js","containers/Header.js","components/Link.js","components/MouseScrollIcon.js","containers/Home.js","components/Skill.js","components/Tag.js","containers/Skills.js","containers/Education.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","interpolation","escapeValue","react","useSuspense","backend","loadPath","detection","order","lookupQuerystring","lookupLocalStorage","lookupFromSubdomainIndex","caches","Context","createContext","initialState","isDarkMode","scrollContainerName","TOGGLE_DARK_MODE","SCROLL_TO","toggleDarkMode","type","scrollTo","payload","reducer","state","action","Object","objectSpread","useState","_useReducer","useReducer","localStorage","JSON","parse","getItem","window","matchMedia","matches","_useReducer2","slicedToArray","dispatch","useEffect","setItem","stringify","availableLangs","DropdownMenu","_ref","buttonRef","menuRef","onClick","currentLang","dimensions","current","getBoundingClientRect","style","width","left","top","height","ReactDOM","createPortal","react_default","a","createElement","className","ref","map","code","key","languages","native","document","getElementsByClassName","Header","_useContext","useContext","_useTranslation","useTranslation","t","useRef","_useState","_useState2","isShowingMenu","setIsShowingMenu","toggleMenu","prev","classList","toggle","listener","event","contains","target","addEventListener","removeEventListener","includes","language","Icon_default","path","mdiLightbulbOff","mdiLightbulb","size","changeLanguage","then","title","Link","icon","rest","objectWithoutProperties","assign","defaultProps","rel","React","memo","MouseScrollIcon","urls","linkedin","github","mail","curriculum","en","pt","Home","forwardRef","props","src","alt","components_Link","href","icons","components_MouseScrollIcon","grade","brand","brandClass","brands","min","max","text","length","Math","ceil","floor","random","skills","otherSkills","Skills","skill","components_Skill","index","components_Tag","Education","scrollRef","educations","year","more","name","proficiency","each","scrollArea","scrollTop","mdiChevronUpBox","App","mainAppRef","containersRefs","remove","add","desiredRef","y","scrollYTo","value","useMemo","Provider","scrollArea_default","speed","horizontal","smoothScrolling","containers_Header","containers_Home","containers_Skills","containers_Education","Boolean","location","hostname","match","userAgent","navigator","toLowerCase","vendor","indexOf","documentElement","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af086960.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    fallbackLng: \"en\",\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    },\r\n\r\n    react: {\r\n      useSuspense: false\r\n    },\r\n\r\n    backend: {\r\n      // for all available options read the backend's repository readme file\r\n      loadPath: \"/locales/{{lng}}/{{ns}}.json\"\r\n    },\r\n\r\n    detection: {\r\n      // order and from where user language should be detected\r\n      order: [\"querystring\", \"localStorage\", \"subdomain\"],\r\n\r\n      // keys or params to lookup language from\r\n      lookupQuerystring: \"lang\",\r\n      lookupLocalStorage: \"lang\",\r\n      lookupFromSubdomainIndex: 0,\r\n\r\n      // cache user language on\r\n      caches: [\"localStorage\"]\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","import { createContext, useReducer, useEffect } from \"react\";\r\n\r\n// Define context\r\nexport const Context = createContext();\r\n\r\n// Default state\r\nconst initialState = {\r\n  isDarkMode: true,\r\n  scrollContainerName: null\r\n};\r\n\r\n// Action constants\r\nexport const TOGGLE_DARK_MODE = \"TOGGLE_DARK_MODE\";\r\nexport const SCROLL_TO = \"SCROLL_TO\";\r\n\r\n// Action helpers\r\nexport const toggleDarkMode = () => ({\r\n  type: TOGGLE_DARK_MODE\r\n});\r\n\r\nexport const scrollTo = scrollContainerName => ({\r\n  type: SCROLL_TO,\r\n  payload: scrollContainerName\r\n});\r\n\r\n// State reducer\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_DARK_MODE:\r\n      return {\r\n        ...state,\r\n        isDarkMode: !state.isDarkMode\r\n      };\r\n\r\n    case SCROLL_TO:\r\n      return {\r\n        ...state,\r\n        scrollContainerName: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Read from local storage or get default state\r\nfunction getInitialState() {\r\n  if (\"state\" in localStorage) {\r\n    // Merge with current state for it may have new properties\r\n    return {\r\n      ...initialState,\r\n      ...JSON.parse(localStorage.getItem(\"state\"))\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...initialState,\r\n    isDarkMode: getPrefersDark()\r\n  };\r\n}\r\n\r\n// Check if user prefered color scheme is dark\r\nfunction getPrefersDark() {\r\n  if (!window.matchMedia) return initialState.isDarkMode;\r\n  return window.matchMedia(\"(prefers-color-scheme: dark\").matches;\r\n}\r\n\r\n// Hook\r\nexport default function useState() {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState());\r\n\r\n  // Save to local storage when state changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"state\", JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return [state, dispatch];\r\n}\r\n","import React, { useContext, useState, useRef, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { languages } from \"countries-list\";\r\n\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiLightbulb, mdiLightbulbOff } from \"@mdi/js\";\r\n\r\nimport { Context, toggleDarkMode } from \"../useState\";\r\n\r\nimport \"./Header.scss\";\r\n\r\nconst availableLangs = [\"en\", \"pt\"];\r\n\r\nfunction DropdownMenu({ buttonRef, menuRef, onClick, currentLang }) {\r\n  const width = 200;\r\n  const dimensions = buttonRef.current.getBoundingClientRect();\r\n\r\n  const style = {\r\n    width: width,\r\n    left: dimensions.left + dimensions.width - width,\r\n    top: dimensions.top + dimensions.height - 1\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"DropdownMenu\" style={style} ref={menuRef}>\r\n      {availableLangs.map(code => (\r\n        <button\r\n          key={code}\r\n          onClick={() => onClick(code)}\r\n          className={currentLang === code ? \"active\" : null}\r\n        >\r\n          {languages[code].native}\r\n        </button>\r\n      ))}\r\n    </div>,\r\n    document.getElementsByClassName(\"App\")[0]\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  const { state, dispatch } = useContext(Context);\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const buttonRef = useRef(null);\r\n  const menuRef = useRef(null);\r\n  const [isShowingMenu, setIsShowingMenu] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsShowingMenu(prev => !prev);\r\n    buttonRef.current.classList.toggle(\"active\");\r\n  };\r\n\r\n  const onChangeLanguage = language => {\r\n    toggleMenu();\r\n    i18n.changeLanguage(language).then(() => {\r\n      document.title = \"Diogo Silva - \" + t(\"Desenvolvedor Full-Stack\");\r\n    });\r\n  };\r\n\r\n  // Make clicks outside dropdown menu close it\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!menuRef.current || menuRef.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      toggleMenu();\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, [menuRef, toggleMenu]);\r\n\r\n  const currentLang = availableLangs.includes(i18n.language)\r\n    ? i18n.language\r\n    : \"en\";\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n      <button className=\"Button\" onClick={() => dispatch(toggleDarkMode())}>\r\n        <Icon\r\n          className=\"icon\"\r\n          path={state.isDarkMode ? mdiLightbulbOff : mdiLightbulb}\r\n          size={1}\r\n        />\r\n      </button>\r\n      <div className=\"ButtonDropdown\">\r\n        <button ref={buttonRef} className=\"Button\" onClick={toggleMenu}>\r\n          {currentLang}\r\n        </button>\r\n        {isShowingMenu && (\r\n          <DropdownMenu\r\n            buttonRef={buttonRef}\r\n            menuRef={menuRef}\r\n            onClick={onChangeLanguage}\r\n            currentLang={currentLang}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Icon from \"@mdi/react\";\r\n\r\nimport \"./Link.scss\";\r\n\r\nfunction Link({ icon, ...rest }) {\r\n  return (\r\n    <a className=\"Link\" {...rest}>\r\n      <Icon className=\"icon\" path={icon} size={1.25} />\r\n    </a>\r\n  );\r\n}\r\n\r\nLink.defaultProps = {\r\n  target: \"_blank\",\r\n  rel: \"noopener noreferrer\"\r\n};\r\n\r\nexport default React.memo(Link);\r\n","import React from \"react\";\r\n\r\nimport \"./MouseScrollIcon.scss\";\r\n\r\nfunction MouseScrollIcon() {\r\n  return (\r\n    <div className=\"MouseScrollIcon\">\r\n      <div className=\"Mouse\">\r\n        <div className=\"MouseScroller\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MouseScrollIcon;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport * as icons from \"@mdi/js\";\r\n\r\nimport Link from \"../components/Link\";\r\nimport MouseScrollIcon from \"../components/MouseScrollIcon\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst urls = {\r\n  linkedin: \"https://www.linkedin.com/in/diogo-azevedo-silva/\",\r\n  github: \"https://github.com/DiogoAbu\",\r\n  mail: \"mailto:diogodeazevedosilva@gmail.com\",\r\n  curriculum: {\r\n    en: \"files/Curriculum Diogo de Azevedo Silva - English.pdf\",\r\n    pt: \"files/Curriculum Diogo de Azevedo Silva.pdf\"\r\n  }\r\n};\r\n\r\nconst Home = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"Home\" ref={ref}>\r\n      <div className=\"PicContainer\">\r\n        <img src=\"images/pic.jpg\" alt=\"\" className=\"Pic\" />\r\n      </div>\r\n\r\n      <span className=\"Name\">Diogo de Azevedo Silva</span>\r\n      <span className=\"Role\">{t(\"Desenvolvedor Full-Stack\")}</span>\r\n\r\n      <div className=\"Buttons\">\r\n        <Link href={urls.linkedin} icon={icons.mdiLinkedinBox} />\r\n        <Link href={urls.github} icon={icons.mdiGithubCircle} />\r\n        <Link\r\n          href={urls.curriculum[i18n.language]}\r\n          icon={icons.mdiFileDownload}\r\n        />\r\n      </div>\r\n\r\n      <span className=\"Mail\">diogodeazevedosilva@gmail.com</span>\r\n\r\n      <MouseScrollIcon />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport \"./Skill.scss\";\r\n\r\nfunction Skill({ title, grade, brand }) {\r\n  const brandClass = brand ? \" \" + brand : \"\";\r\n  return (\r\n    <div className=\"Skill\">\r\n      <div className=\"Details\">\r\n        <span>{title}</span>\r\n        <span>{grade}/10</span>\r\n      </div>\r\n      <div className=\"ProgressContainer\">\r\n        <div\r\n          className={\"ProgressFill\" + brandClass}\r\n          style={{ width: (grade / 10) * 100 + \"%\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Skill);\r\n","import React from \"react\";\r\n\r\nimport \"./Tag.scss\";\r\n\r\nconst brands = [\"info\", \"success\"];\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction Tag({ text, brand }) {\r\n  const brandClass = brand\r\n    ? \" \" + brand\r\n    : \" \" + brands[getRandomIntInclusive(0, brands.length - 1)];\r\n\r\n  return <span className={\"Tag\" + brandClass}>{text}</span>;\r\n}\r\n\r\nexport default React.memo(Tag);\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport \"./Skills.scss\";\r\nimport Skill from \"../components/Skill\";\r\nimport Tag from \"../components/Tag\";\r\nimport MouseScrollIcon from \"../components/MouseScrollIcon\";\r\n\r\nconst skills = [\r\n  { title: \"Javascript, Node\", grade: 8 },\r\n  { title: \"Typescript\", grade: 6, brand: \"success\" },\r\n  { title: \"HTML5\", grade: 6, brand: \"warning\" },\r\n  { title: \"CSS3, LESS, SASS\", grade: 5, brand: \"info\" },\r\n  { title: \"PHP\", grade: 5, brand: \"danger\" }\r\n];\r\n\r\nconst otherSkills = [\r\n  \"REST API\",\r\n  \"AJAX\",\r\n  \"JSON\",\r\n  \"HATEOS\",\r\n  \"GIT\",\r\n  \"Github\",\r\n  \"React\",\r\n  \"React-Native\",\r\n  \"Redux\",\r\n  \"Mobx\",\r\n  \"ESLint\",\r\n  \"TSLint\",\r\n  \"Docker\"\r\n];\r\n\r\nconst Skills = React.forwardRef((props, ref) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"Skills\" ref={ref}>\r\n      <div className=\"Title\">{t(\"Competências\")}</div>\r\n\r\n      <div className=\"SkillList\">\r\n        {skills.map(skill => (\r\n          <Skill key={skill.title} {...skill} />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"OtherSkills\">\r\n        {otherSkills.map((skill, index) => (\r\n          <Tag\r\n            key={skill}\r\n            text={skill}\r\n            brand={index % 2 === 0 ? \"success\" : \"info\"}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <MouseScrollIcon />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Skills;\r\n","import React, { useContext } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiChevronUpBox } from \"@mdi/js\";\r\n\r\nimport { Context } from \"../useState\";\r\n\r\nimport \"./Education.scss\";\r\nimport Tag from \"../components/Tag\";\r\n\r\nconst Education = React.forwardRef((props, ref) => {\r\n  const { scrollRef } = useContext(Context);\r\n  const { t } = useTranslation();\r\n\r\n  const educations = [\r\n    {\r\n      year: \"2019 - \" + t(\"Agora\"),\r\n      title: t(\"Sistemas de Informação\"),\r\n      more: \"Estácio de Sá\"\r\n    }\r\n  ];\r\n\r\n  const languages = [\r\n    { name: t(\"Português\"), proficiency: t(\"Nativo\") },\r\n    { name: t(\"Inglês\"), proficiency: t(\"Fluente\") }\r\n  ];\r\n\r\n  const onScrollToTop = () => {\r\n    scrollRef.current.scrollArea.scrollTop();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Education\" ref={ref}>\r\n      <div className=\"Title\">{t(\"Educação\")}</div>\r\n\r\n      {educations.map((each, index) => (\r\n        <div key={index} className=\"EducationContainer\">\r\n          <div className=\"EducationYearContainer\">\r\n            <div className=\"EducationYear\">{each.year}</div>\r\n          </div>\r\n          <div className=\"EducationDetails\">\r\n            <span className=\"EducationTitle\">{each.title}</span>\r\n            {each.more}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"Languages\">\r\n        {languages.map(({ name, proficiency }, index) => (\r\n          <Tag\r\n            key={name}\r\n            text={name + \" - \" + proficiency}\r\n            brand={index % 2 === 0 ? \"success\" : \"info\"}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"ScrollToTopIcon\">\r\n        <button onClick={onScrollToTop}>\r\n          <Icon path={mdiChevronUpBox} size={1.5} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Education;\r\n","import React, { useEffect, useRef, useMemo } from \"react\";\nimport ScrollArea from \"react-scrollbar\";\nimport { useTranslation } from \"react-i18next\";\n\nimport useState, { Context, scrollTo } from \"./useState\";\nimport Header from \"./containers/Header\";\nimport Home from \"./containers/Home\";\nimport Skills from \"./containers/Skills\";\nimport Education from \"./containers/Education\";\n\nfunction App() {\n  const [state, dispatch] = useState();\n  const mainAppRef = useRef(null);\n  const scrollRef = useRef(null);\n\n  const { t } = useTranslation();\n\n  const containersRefs = {\n    Home: useRef(null),\n    Skills: useRef(null),\n    Education: useRef(null)\n  };\n\n  // Add theme class to App element\n  useEffect(() => {\n    if (!mainAppRef || !mainAppRef.current) {\n      return;\n    }\n\n    if (state.isDarkMode) {\n      mainAppRef.current.classList.remove(\"light\");\n    } else {\n      mainAppRef.current.classList.add(\"light\");\n    }\n  }, [state.isDarkMode]);\n\n  // Scroll when state prop changes\n  useEffect(() => {\n    //setTimeout(() => scrollRef.current.scrollArea.scrollBottom(), 100);\n\n    if (!state.scrollContainerName) {\n      return;\n    }\n\n    const desiredRef = containersRefs[state.scrollContainerName];\n    if (!desiredRef || !desiredRef.current) {\n      return;\n    }\n\n    // Get component dimensions\n    const { y } = desiredRef.current.getBoundingClientRect();\n    // Get scroll ref and run function\n    scrollRef.current.scrollArea.scrollYTo(y);\n\n    // Reset scroll state\n    dispatch(scrollTo(null));\n  }, [state.scrollContainerName]);\n\n  // For Context Provider (https://kentcdodds.com/blog/always-use-memo-your-context-value)\n  const value = useMemo(() => ({ state, dispatch, scrollRef }), [\n    state,\n    scrollRef\n  ]);\n\n  document.title = \"Diogo Silva - \" + t(\"Desenvolvedor Full-Stack\");\n\n  return (\n    <Context.Provider value={value}>\n      <div\n        className={\"App\" + (state.isDarkMode ? \"\" : \" light\")}\n        ref={mainAppRef}\n      >\n        <ScrollArea\n          speed={0.8}\n          className=\"ScrollArea\"\n          horizontal={false}\n          smoothScrolling={true}\n          ref={scrollRef}\n        >\n          <Header />\n          <Home ref={containersRefs.Home} />\n          <Skills ref={containersRefs.Skills} />\n          <Education ref={containersRefs.Education} />\n        </ScrollArea>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport \"./i18n\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Device detection\nconst userAgent = navigator.userAgent.toLowerCase();\nconst vendor = navigator.vendor.toLowerCase();\n// Is Mobile Chrome from Google?\nif (\n  userAgent.indexOf(\"mobile\") > -1 &&\n  userAgent.indexOf(\"chrome\") > -1 &&\n  vendor.indexOf(\"google\") > -1\n) {\n  document.documentElement.classList.add(\"os-android\");\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}